(()=>{"use strict";function t(t,i){return{x:t.x*Math.cos(i)-t.y*Math.sin(i),y:t.x*Math.sin(i)+t.y*Math.cos(i)}}function i(i,s){const e=i.velocity.x-s.velocity.x,h=i.velocity.y-s.velocity.y;if(e*(s.x-i.x)+h*(s.y-i.y)>=0){const e=-Math.atan2(s.y-i.y,s.x-i.x),h=i.mass,n=s.mass,a=t(i.velocity,e),c=t(s.velocity,e),o={x:a.x*(h-n)/(h+n)+2*c.x*n/(h+n),y:a.y},E={x:c.x*(h-n)/(h+n)+2*a.x*n/(h+n),y:c.y},r=t(o,-e),l=t(E,-e);i.velocity.x=r.x,i.velocity.y=r.y,s.velocity.x=l.x,s.velocity.y=l.y}}function s(t,i,s,e){const h=s-t,n=e-i;return Math.hypot(h,n)}function e(t,i){return Math.floor(Math.random()*(i-t+1)+t)}const h=class{constructor(t,i,s,e){this.x=t,this.y=i,this.radius=s,this.mass=100,this.velocity={x:Math.random()-.5,y:Math.random()-.5},this.status=v.HEALTHY,this.color=C.HEALTHY,this.ctx=e,Math.random()<x&&this.infect(),Math.random()<u&&this.vaccinate()}infect(){this.status!==v.INFECTED&&this.status!==v.RECOVERED&&(this.status===v.VACCINATED&&Math.random()<m||(this.status=v.INFECTED,this.color=C.INFECTED,setTimeout((()=>{this.recover()}),T)))}recover(){this.status=v.RECOVERED,this.color=C.RECOVERED}vaccinate(){this.status!==v.INFECTED&&this.status!==v.RECOVERED&&(this.status=v.VACCINATED,this.color=C.VACCINATED)}draw(){this.ctx.beginPath(),this.ctx.arc(this.x,this.y,this.radius,0,2*Math.PI,!1),this.ctx.fillStyle=this.color,this.ctx.fill(),this.ctx.closePath()}drawLines(t,i){for(const e of i){const i=s(t.x,t.y,e.x,e.y);if(i>D||e.status===v.RECOVERED)continue;e.infect();const h=.8-i/D*.8;this.ctx.lineWidth=3,this.ctx.strokeStyle=t.color,this.ctx.globalAlpha=h,this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(e.x,e.y),this.ctx.closePath(),this.ctx.stroke(),this.ctx.globalAlpha=1}}update(t){this.draw(this.ctx),this.status===v.INFECTED&&this.drawLines(this,t);for(let e=0;e<t.length;e++)this!==t[e]&&s(this.x,this.y,t[e].x,t[e].y)<2*this.radius&&i(this,t[e]);(this.x-this.radius<=0||this.x+this.radius>=canvas.width)&&(this.velocity.x=-1*this.velocity.x),(this.y-this.radius<=0||this.y+this.radius>=canvas.height)&&(this.velocity.y=-1*this.velocity.y),this.x+=this.velocity.x,this.y+=this.velocity.y}},n=document.getElementById("canvas"),a=n.getContext("2d");let c,o={canvas:document.getElementById("chart-canvas"),dimensions:document.getElementById("chart-dimensions")};function E(){c=[];for(let t=0;t<y;t++){const i=5;let o=e(i,n.width-i),E=e(i,n.height-i);if(0!==t)for(let t=0;t<c.length;t++)s(o,E,c[t].x,c[t].y)<2*i&&(o=e(i,n.width-i),E=e(i,n.height-i),t=-1);c.push(new h(o,E,i,a))}Chart.init(o,y),Chart.start()}n.width=innerWidth,n.height=innerHeight,addEventListener("resize",(()=>{n.width=innerWidth,n.height=innerHeight,E()}));let r={HEALTHY:0,VACCINATED:0,INFECTED:0,RECOVERED:0};function l(){requestAnimationFrame(l),a.clearRect(0,0,n.width,n.height),c.forEach((t=>{clearInterval(),t.update(c),r[t.status]++})),Chart.update(r),Chart.draw(),r={HEALTHY:0,VACCINATED:0,INFECTED:0,RECOVERED:0}}let d=!1,y=100,x=.05,u=.5;const C={HEALTHY:"white",VACCINATED:"#59bfff",INFECTED:"red",RECOVERED:"#7FFF00"},v={HEALTHY:"HEALTHY",VACCINATED:"VACCINATED",INFECTED:"INFECTED",RECOVERED:"RECOVERED"},m=.997,D=50,T=1e4;(()=>{const t=document.getElementById("start-btn");t.addEventListener("click",(()=>{E(),d||(l(),d=!0),t.textContent="Restart"}));const i=document.getElementById("pop-slider");i.addEventListener("change",(()=>{y=i.value}));const s=document.getElementById("infection-slider");s.addEventListener("change",(()=>{x=s.value/100}));const e=document.getElementById("vaccination-slider");e.addEventListener("change",(()=>{u=e.value/100}))})()})();